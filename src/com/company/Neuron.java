package com.company;

import java.util.Random;

public class Neuron {
    /*
        класс Neuron содержит всю информацию о нейроне,
        веса синапсов, входящих в него
        функцию активации
     */


    /*
        информация в нейроне:
        - веса входящих синапсов
        - количество синапсов
        - информация о функции активации
     */

    /*
        методы класса:
        - подсчет нейрона (на вход идёт вектор весов, выходом является значение)
        calcNeuron
        - обучение нейрона (???)
        teachNeuron
        - получить веса синапсов (возвращает вектор весов)
        getWeight
        -
     */

    double[] synapses;

    public void calcNeuron(double[] array) {

    }

    public void setRandomWeights() {
        for (int i = 0; i < synapses.length; i++) {
            synapses[i] = Math.random();
            /*
                кладём в каждую ячейку массива весов нейронов случайный вес,
                возможно, следует применить метод:
                Random random = new Random();
                int num = random.nextInt(100);
             */

            /*
                при Math.random(); диапазон по умолчанию 0-1,
                следует арифметически преобразовать выражение,
                чтобы задать нужный диапазон с нужной точностью
             */

            /*
                возможно, следует избавиться от типа double и перейти к другим,
                более точным или менее тяжелым
             */
        }
    }


    public Neuron(int num) {
        /*
        добавить в конструктор инициализацию начальных весов нейронов
         */

        /*
            в конструкторе должно определяться:
            - кол-во синапсов
            - ф-ия активации
            - случайная генерация весов синапсов или чёткий выбор веса
         */

        synapses = new double[num];



    }
}
